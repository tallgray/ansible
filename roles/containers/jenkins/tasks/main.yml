---
- name: "Deploy {{ role_name | default('container') | capitalize }} stack"
  tags: ["jenkins"]
  block:
    - name: Ensure Docker Compose is installed
      apt:
        name: docker-compose
        state: present
        update_cache: true

    - name: Ensure destination directory exists
      file:
        path: "{{ container_dest_path }}/{{ role_name }}"
        state: directory
        owner: tallgray1
        group: tallgray1
        mode: '0755'

    - name: Set container path facts on localhost
      set_fact:
        container_src_path: "{{ container_src_path }}"
        container_dest_path: "{{ container_dest_path }}"
      delegate_to: localhost

    - name: Copy full container directory from source-of-truth
      synchronize:
        src: "{{ container_src_path }}/{{ role_name }}/"
        dest: "{{ container_dest_path }}/{{ role_name }}/"
        mode: push
        recursive: yes
        rsync_opts:
          - "--delete"
      delegate_to: localhost
      become: false

    - name: Check if Dockerfile exists in source
      stat:
        path: "{{ container_src_path }}/{{ role_name }}/Dockerfile"
      register: dockerfile_check
      delegate_to: localhost

    - name: Copy Dockerfile separately (if it exists)
      copy:
        src: "{{ container_src_path }}/{{ role_name }}/Dockerfile"
        dest: "{{ container_dest_path }}/{{ role_name }}/Dockerfile"
        owner: tallgray1
        group: tallgray1
        mode: '0644'
      when: dockerfile_check.stat.exists

    - name: Launch container stack
      command: docker-compose up -d
      args:
        chdir: "{{ container_dest_path }}/{{ role_name }}"
